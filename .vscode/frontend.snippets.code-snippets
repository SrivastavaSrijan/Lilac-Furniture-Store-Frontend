{
	// Place your frontend workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// },
  "Generate Component": {
    "prefix": "gencomp",
    "body": [
      "import { Stack } from '@mui/material';",
      "",
      "interface I${TM_FILENAME_BASE/(.)(.*)/${1:/upcase}$2/}Props {}",
      "export const ${TM_FILENAME_BASE/(.)(.*)/${1:/upcase}$2/} = (props: I${TM_FILENAME_BASE/(.)(.*)/${1:/upcase}$2/}Props) => {",
      "  return (",
      "    <Stack>",
      "      Lorem ipsum dolor sit amet, sunt eiusmod dolore velit eu aliquip nulla do",
      "      magna. Magna ut irure do aliquip sunt esse sint eiusmod nostrud mollit",
      "      laboris volupta te ea. Mollit adipisicing minim aliqua consectetur officia",
      "      et elit deserunt moll it commodo ea enim in occaecat et tempor labore.",
      "      Consectetur cillum duis in non aliquip eiusmod et consectetur cillum",
      "      excepteur duis do laboris. Cillum aute dol ore est ea veniam quis dolore",
      "    </Stack>",
      "  );",
      "};",
			""
    ],
    "description": "Creates a TypeScript React component with MUI Stack using the filename as the component name"
  }

}